{"version":3,"sources":["socket.js","reducer.js","components/EnterRoom/EnterRoom.js","components/ChatRoom/ChatRoom.js","App.js","index.js"],"names":["socket","io","state","action","type","joined","username","payload","roomId","users","messages","EnterRoom","onLogin","useState","setRoomId","setUsername","isLoading","setLoading","onEnter","a","alert","obj","axios","post","className","placeholder","value","onChange","e","target","disabled","onClick","ChatRoom","onAddMessage","messageValue","setMessageValue","messagesRef","useRef","useEffect","current","scrollTo","length","map","name","index","key","ref","message","text","date","rows","emit","Date","toLocaleTimeString","App","useReducer","reducer","dispatch","setUsers","addMessage","get","data","on","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.186ba6fc.chunk.js","sourcesContent":["import io from 'socket.io-client'\r\n\r\nconst socket = io()\r\n\r\nexport default socket","export default (state, action) => {\r\n   switch (action.type) {\r\n      case 'JOINED':\r\n         return {\r\n            ...state,\r\n            joined: true,\r\n            username: action.payload.username,\r\n            roomId: action.payload.roomId,\r\n         };\r\n\r\n      case 'SET_DATA':\r\n         return {\r\n            ...state,\r\n            users: action.payload.users,\r\n            messages: action.payload.messages,\r\n         };\r\n\r\n      case 'SET_USERS':\r\n         return {\r\n            ...state,\r\n            users: action.payload,\r\n         };\r\n\r\n      case 'NEW_MESSAGE':\r\n         return {\r\n            ...state,\r\n            messages: [...state.messages, action.payload],\r\n         };\r\n\r\n      default:\r\n         return state\r\n   }\r\n}","import React, { useState } from 'react'\nimport axios from 'axios'\nimport './EnterRoom.css'\n\nfunction EnterRoom({ onLogin }) {\n  const [roomId, setRoomId] = useState('')\n  const [username, setUsername] = useState('')\n  const [isLoading, setLoading] = useState(false)\n\n  const onEnter = async () => {\n    if (!roomId || !username) {\n      return alert('Заполните все поля')\n    }\n    const obj = {\n      roomId,\n      username,\n    }\n    setLoading(true)\n    await axios.post('/rooms', obj)\n    onLogin(obj)\n  }\n\n  return (\n    <div className=\"enter-room\">\n      <input\n        type=\"text\"\n        placeholder=\"Room ID\"\n        value={roomId}\n        onChange={(e) => setRoomId(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Ваше имя\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <button disabled={isLoading} onClick={onEnter} className=\"enter-room__button\">\n        {isLoading ? 'Вход...' : 'Войти'}\n      </button>\n    </div>\n  )\n}\n\nexport default EnterRoom\n","import React, { useState, useEffect, useRef } from 'react'\nimport socket from '../../socket'\nimport './ChatRoom.css'\n\nfunction ChatRoom({ users, messages, username, roomId, onAddMessage }) {\n\n\n  const [messageValue, setMessageValue] = useState('')\n\n  const messagesRef = useRef(null)\n\n  const onSendMessage = () => {\n    if (messageValue === '') {\n      alert('Введите сообщение')\n    } else {\n      socket.emit('ROOM:NEW_MESSAGE', {\n        username,\n        roomId,\n        text: messageValue,\n        date: new Date().toLocaleTimeString()\n      })\n      onAddMessage({ username, text: messageValue, date: new Date().toLocaleTimeString() })\n      setMessageValue('')\n    }\n  }\n\n\n  useEffect(() => {\n    messagesRef.current.scrollTo(0, 99999)\n  }, [messages])\n\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat-users\">\n        Комната: <b>{roomId}</b>\n        <hr />\n        <b>Онлайн ({users.length}):</b>\n        <ul>\n          {users.map((name, index) => (\n            <li key={name + index}>{name}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"chat-messages\">\n        <ul ref={messagesRef} className=\"messages\">\n          {\n            messages.map((message, index) => (\n              <li key={index}>\n                <div className=\"message\">\n                  <p>{message.text}</p>\n                  <div className=\"message-info\">\n                    <span>{message.username}</span>\n                    <span>{message.date}</span>\n                  </div>\n                </div>\n              </li>\n            ))\n          }\n        </ul>\n        <form>\n          <textarea\n            value={messageValue}\n            onChange={(e) => setMessageValue(e.target.value)}\n            className=\"form-control\"\n            rows=\"3\"></textarea>\n          <button onClick={onSendMessage} type=\"button\" className=\"btn-chat\">\n            Отправить\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChatRoom\n","import React, { useEffect, useReducer } from 'react'\nimport axios from 'axios'\nimport socket from './socket'\nimport reducer from './reducer'\nimport EnterRoom from './components/EnterRoom/EnterRoom'\nimport ChatRoom from './components/ChatRoom/ChatRoom'\n\nimport './style/nullstyle.css'\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, {\n    joined: false,\n    roomId: null,\n    username: null,\n    date: null,\n    users: [],\n    messages: [],\n  })\n\n\n  const setUsers = users => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users,\n    })\n  }\n\n  const addMessage = ({ text, username, date }) => {\n    dispatch({\n      type: 'NEW_MESSAGE',\n      payload: {\n        text,\n        username,\n        date\n      }\n    })\n  }\n\n  const onLogin = async (obj) => {\n    dispatch({\n      type: 'JOINED',\n      payload: obj,\n    })\n    socket.emit('ROOM:JOIN', obj)\n    const { data } = await axios.get(`/rooms/${obj.roomId}`)\n    dispatch({\n      type: 'SET_DATA',\n      payload: data,\n    })\n  }\n\n  useEffect(() => {\n    socket.on('ROOM:SET_USERS', setUsers)\n    socket.on('ROOM:NEW_MESSAGE', addMessage)\n  }, [])\n\n  window.socket = socket\n\n  return (\n    <div className=\"wrapper\">\n      {!state.joined ? (\n        <EnterRoom onLogin={onLogin} />\n      ) : (\n          <ChatRoom {...state} onAddMessage={addMessage} />\n        )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}